<?xml version="1.0" encoding="UTF-8"?>
<ehcache xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:noNamespaceSchemaLocation="http://ehcache.org/ehcache.xsd">

    <!-- 磁盘缓存位置 -->
    <diskStore path="java.io.tmpdir/ehcache"/>

    <!--
    配置提供者
        1、peerDiscovery，提供者方式，有两种方式：自动发现(automatic)、手动配置(manual)
        2、rmiUrls，手动方式时提供者的地址，多个的话用|隔开
    -->
    <cacheManagerPeerProviderFactory class="net.sf.ehcache.distribution.RMICacheManagerPeerProviderFactory"
            properties="peerDiscovery=manual, rmiUrls=//localhost:40002/users"/>

    <!--
    配置监听器
        1、hostName 主机地址
        2、port 端口
        3、socketTimeoutMillis socket子模块的超时时间，默认是2000ms
    -->
    <cacheManagerPeerListenerFactory class="net.sf.ehcache.distribution.RMICacheManagerPeerListenerFactory"
            properties="hostName=localhost, port=40001, socketTimeoutMillis=2000"/>
    
    <!-- 默认缓存 -->
    <!--<defaultCache
            maxEntriesLocalHeap="10000"
            eternal="false"
            timeToIdleSeconds="120"
            timeToLiveSeconds="120"
            maxEntriesLocalDisk="10000000"
            diskExpiryThreadIntervalSeconds="120"
            memoryStoreEvictionPolicy="LRU">
        <persistence strategy="distributed"/>
    </defaultCache>-->

    <!--
    ehcache.xml配置参数说明：

    name：缓存名称。
    maxElementsInMemory：缓存最大个数。
    eternal：缓存中对象是否为永久的，如果是，超时设置将被忽略，对象从不过期。
    timeToIdleSeconds：置对象在失效前的允许闲置时间（单位：秒）。仅当eternal=false对象不是永久有效时使用，可选属性，默认值是0，也就是可闲置时间无穷大。
    timeToLiveSeconds：缓存数据的生存时间（TTL），也就是一个元素从构建到消亡的最大时间间隔值，这只能在元素不是永久驻留时有效，如果该值是0就意味着元素可以停顿无穷长的时间。
    maxEntriesLocalDisk：当内存中对象数量达到maxElementsInMemory时，Ehcache将会对象写到磁盘中。
    overflowToDisk：内存不足时，是否启用磁盘缓存。
    diskSpoolBufferSizeMB：这个参数设置DiskStore（磁盘缓存）的缓存区大小。默认是30MB。每个Cache都应该有自己的一个缓冲区。
    maxElementsOnDisk：硬盘最大缓存个数。
    diskPersistent：是否在VM重启时存储硬盘的缓存数据。默认值是false。
    diskExpiryThreadIntervalSeconds：磁盘失效线程运行时间间隔，默认是120秒。
    memoryStoreEvictionPolicy：当达到maxElementsInMemory限制时，Ehcache将会根据指定的策略去清理内存。默认策略是LRU（最近最少使用）。你可以设置为FIFO（先进先出）或是LFU（较少使用）。
    clearOnFlush：内存数量最大时是否清除。
    -->
    <cache name="users"
           maxElementsInMemory="1000"
           eternal="false"
           timeToIdleSeconds="100"
           timeToLiveSeconds="100"
           overflowToDisk="false"
           memoryStoreEvictionPolicy="LRU">

        <!--
        配置缓存事件监听器
            replicateAsynchronously  操作是否异步,默认值为true.
            replicatePuts 添加操作是否同步到集群内的其他缓存,默认为true.
            replicateUpdates 更新操作是否同步到集群内的其他缓存,默认为true.
            replicateUpdatesViaCopy 更新之后的对象是否复制到集群中的其他缓存(true);
            replicateRemovals 删除操作是否同步到集群内的其他缓存,默认为true.
        -->
        <cacheEventListenerFactory class="net.sf.ehcache.distribution.RMICacheReplicatorFactory"
                properties="replicateAsynchronously=true,
                            replicatePuts=true,
                            replicateUpdates=true,
                            replicateUpdatesViaCopy=true,
                            replicateRemovals=true "/>
        
        <!-- 初始化缓存，以及自动设置-->
        <bootstrapCacheLoaderFactory class="net.sf.ehcache.distribution.RMIBootstrapCacheLoaderFactory"/>
    </cache>
</ehcache>